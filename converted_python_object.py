[
    {
        "name": "text_entry",
        "display_name": "Text",
        "description": "Textual input not exceeding 4096 characters.",
        "type": "entry",
        "icon": "keyboard",
        "entry_type": "text",
        "category": "entries",
        "version": "1.2.0",
        "outputs": {"text_entry": {"type": "str"}},
    },
    {
        "name": "textarea_entry",
        "display_name": "Multiline Text",
        "description": "Multiline textual input that you can use as a manual entry.",
        "type": "entry",
        "icon": "keyboard",
        "entry_type": "textarea",
        "category": "entries",
        "version": "1.0.0",
        "outputs": {"textarea_entry": {"type": "str"}},
    },
    {
        "name": "folder_entry",
        "display_name": "Folder Selection",
        "description": "Folder selection on your own machine.",
        "type": "entry",
        "icon": "folder-open",
        "entry_type": "folder",
        "category": "entries",
        "version": "1.0.0",
        "outputs": {"folder_entry": {"type": "str"}},
    },
    {
        "name": "file_entry",
        "display_name": "File Selection",
        "description": "File selection on your own machine.",
        "type": "entry",
        "icon": "file",
        "entry_type": "file",
        "category": "entries",
        "version": "1.0.0",
        "outputs": {"file_entry": {"type": "str"}},
    },
    {
        "name": "compute_mean",
        "description": "computing the mean of a list of number.",
        "type": "function",
        "icon": "calculator",
        "file_path": "basic_operations.py",
        "category": "basic operations",
        "version": "1.1.1",
        "inputs": {"numbers": {"type": "list"}},
        "outputs": {"random_list": {"type": "float"}},
    },
    {
        "name": "table_chart",
        "display_name": "Table",
        "description": "A table representing data.",
        "type": "graph",
        "icon": "table",
        "category": "graphs",
        "inputs": {"data": {"type": "keypairlist"}},
    },
    {
        "name": "if_condition",
        "display_name": "If",
        "type": "control",
        "icon": "arrows-split-up-and-left",
        "category": "flow control",
        "version": "1.0.0",
        "inputs": {"condition": {"type": "bool"}},
    },
    {
        "name": "if_any_condition",
        "display_name": "If Any",
        "type": "control",
        "icon": "arrows-split-up-and-left",
        "category": "flow control",
        "version": "1.0.0",
        "inputs": {"any": {"type": "any"}},
    },
    {
        "name": "for_loop",
        "display_name": "For",
        "type": "control",
        "icon": "repeat",
        "category": "flow control",
        "version": "1.0.0",
        "inputs": {"start": {"type": "int"}, "end": {"type": "int"}},
        "outputs": {"index": {"type": "int"}},
        "options": [
            {
                "name": "start",
                "type": "integer",
                "step": 1,
                "max": 10000000000,
                "min": -10000000000,
                "default": 0,
            },
            {
                "name": "end",
                "type": "integer",
                "step": 1,
                "max": 10000000000,
                "min": -10000000000,
                "default": 10,
            },
        ],
    },
    {
        "name": "for_each_loop",
        "display_name": "For Each",
        "type": "control",
        "icon": "repeat",
        "category": "flow control",
        "version": "1.0.0",
        "inputs": {"list": {"type": "iterable"}},
        "outputs": {"element": {"type": "any"}, "index": {"type": "int"}},
    },
    {
        "name": "while_loop",
        "display_name": "While",
        "type": "control",
        "icon": "repeat",
        "category": "flow control",
        "version": "1.0.0",
        "inputs": {"cond": {"type": "bool"}},
    },
    {
        "name": "try_catch",
        "display_name": "Try Catch",
        "type": "control",
        "icon": "triangle-exclamation",
        "category": "flow control",
        "version": "1.0.0",
    },
    {
        "name": "sequence",
        "display_name": "Execution Order",
        "type": "control",
        "icon": "list-ol",
        "category": "flow control",
        "version": "1.0.0",
    },
    {
        "name": "create_variable",
        "display_name": "New variable",
        "type": "variable",
        "icon": "code",
        "category": "variables",
        "version": "1.0.0",
        "inputs": {"value": {"type": "any"}},
    },
    {
        "name": "get_variable",
        "display_name": "Get variable",
        "type": "variable",
        "icon": "code",
        "category": "variables",
        "version": "1.0.0",
        "outputs": {"value": {"type": "any"}},
    },
    {
        "name": "set_variable",
        "display_name": "Set variable",
        "type": "variable",
        "icon": "code",
        "category": "variables",
        "version": "1.0.0",
        "inputs": {"value": {"type": "any"}},
    },
    {
        "name": "as_is",
        "description": "get integer and return integer",
        "type": "function",
        "icon": "cube",
        "file_path": "basic_operations.py",
        "category": "basic operations",
        "version": "1.2.0",
        "inputs": {"number": {"type": "int"}},
        "outputs": {"number": {"type": "int"}},
    },
    {
        "name": "read_text_file",
        "display_name": "Read Text File",
        "description": "Read the content of a text file and return it as a text.",
        "type": "function",
        "icon": "file-lines",
        "file_path": "sequential_testing.py",
        "category": "Files & Folders",
        "version": "0.2.0",
        "inputs": {"file_path": {"type": "str"}},
        "outputs": {"file_content": {"type": "str"}},
    },
    {
        "name": "generate_random_text",
        "display_name": "Generate Text",
        "description": "Generating a random text.",
        "type": "function",
        "icon": "font",
        "file_path": "sequential_testing.py",
        "category": "Files & Folders",
        "version": "0.2.0",
        "inputs": {"n": {"type": "int"}},
        "outputs": {"generated_text": {"type": "str"}},
        "options": [
            {
                "name": "is_words",
                "display_name": "Generate Words",
                "type": "toggle",
                "default": False,
            },
            {
                "name": "reference_text",
                "display_name": "Reference Words",
                "type": "textarea",
                "default": "this is default text a bit more extensive than others",
                "max_characters": 1000,
            },
        ],
    },
    {
        "name": "generate_random_integer",
        "display_name": "Generate Integer",
        "description": "Generating a random integer value.",
        "type": "function",
        "icon": "9",
        "file_path": "sequential_testing.py",
        "category": "Files & Folders",
        "version": "0.2.0",
        "outputs": {"random_integer": {"type": "int"}},
        "options": [
            {
                "name": "min_value",
                "type": "integer",
                "step": 1,
                "max": 10,
                "min": 0,
                "default": 0,
            },
            {
                "name": "max_value",
                "type": "integer",
                "step": 1,
                "max": 200,
                "min": 0,
                "default": 100,
            },
        ],
    },
    {
        "name": "create_file_with_content",
        "display_name": "Create File",
        "description": "Create a text file with a text content.",
        "type": "function",
        "icon": "file-lines",
        "file_path": "sequential_testing.py",
        "category": "Files & Folders",
        "version": "0.2.0",
        "inputs": {
            "text_content": {"type": "str"},
            "file_path": {"type": "str"},
            "file_name": {"type": "str"},
        },
        "outputs": {"file_location": {"type": "str"}},
    },
    {
        "name": "list_files_in_folder",
        "display_name": "List of files",
        "description": "List of files with there size in KB.",
        "type": "function",
        "icon": "table-list",
        "file_path": "sequential_testing.py",
        "category": "Files & Folders",
        "version": "0.2.0",
        "inputs": {"folder_path": {"type": "str"}},
        "outputs": {"file_list": {"type": "keypairlist"}},
    },
    {
        "name": "get_values_from_list_of_dicts",
        "display_name": "Extract values list",
        "description": "Extract values of an attribute from a key-pair list.",
        "type": "function",
        "icon": "list",
        "file_path": "sequential_testing.py",
        "category": "Files & Folders",
        "version": "0.2.0",
        "inputs": {"dict_list": {"type": "keypairlist"}, "key": {"type": "str"}},
        "outputs": {"values_list": {"type": "list"}},
    },
    {
        "name": "count_characters",
        "display_name": "Count Characters",
        "description": "count the number of characters.",
        "type": "function",
        "icon": "stopwatch-20",
        "file_path": "sequential_testing.py",
        "category": "Files & Folders",
        "version": "0.2.0",
        "inputs": {"text": {"type": "str"}},
        "outputs": {"char_count": {"type": "int"}},
    },
    {
        "name": "count_words",
        "display_name": "Count Words",
        "description": "count the number of words.",
        "type": "function",
        "icon": "stopwatch-20",
        "file_path": "sequential_testing.py",
        "category": "Files & Folders",
        "version": "0.2.0",
        "inputs": {"text": {"type": "str"}},
        "outputs": {"word_count": {"type": "int"}},
    },
    {
        "name": "create_folder_if_not_exists",
        "display_name": "Create Folder",
        "description": "create a folder.",
        "type": "function",
        "icon": "folder",
        "file_path": "sequential_testing.py",
        "category": "Files & Folders",
        "version": "0.2.0",
        "inputs": {"folder_path": {"type": "str"}},
        "outputs": {"folder_path": {"type": "str"}},
    },
    {
        "name": "move_file",
        "display_name": "Move File",
        "description": "move file to a new destination.",
        "type": "function",
        "icon": "folder-tree",
        "file_path": "sequential_testing.py",
        "category": "Files & Folders",
        "version": "0.2.0",
        "inputs": {
            "source_path": {"type": "str"},
            "destination_folder": {"type": "str"},
        },
    },
    {
        "name": "update_file_name",
        "display_name": "Update Name",
        "description": "Update file name.",
        "type": "function",
        "icon": "pen-clip",
        "file_path": "sequential_testing.py",
        "category": "Files & Folders",
        "version": "0.2.0",
        "inputs": {
            "old_file_path": {"type": "str"},
            "new_file_name": {"type": "str"},
        },
        "outputs": {"new_file_path": {"type": "str"}},
    },
    {
        "name": "delete_file",
        "display_name": "Delete File",
        "description": "Delete file.",
        "type": "function",
        "icon": "trash-can",
        "file_path": "sequential_testing.py",
        "category": "Files & Folders",
        "version": "0.2.0",
        "inputs": {"file_path": {"type": "str"}},
    },
    {
        "name": "concatenate_strings_with_separator",
        "display_name": "Concatenate",
        "description": "Concatenate two texts.",
        "type": "function",
        "icon": "font",
        "file_path": "sequential_testing.py",
        "category": "Files & Folders",
        "version": "0.2.0",
        "inputs": {"string1": {"type": "str"}, "string2": {"type": "str"}},
        "outputs": {"result_string": {"type": "str"}},
        "options": [{"name": "separator", "type": "input", "default": "_"}],
    },
    {
        "name": "parse_integer_to_text",
        "display_name": "Int to Str",
        "description": "Convert integer to string.",
        "type": "function",
        "icon": "font",
        "file_path": "sequential_testing.py",
        "category": "Files & Folders",
        "version": "0.2.0",
        "inputs": {"number": {"type": "int"}},
        "outputs": {"text_representation": {"type": "str"}},
    },
    {
        "name": "generate_random_integers",
        "display_name": "Generate Integer List",
        "description": "generaye a list of random integer values.",
        "type": "function",
        "icon": "list",
        "file_path": "sequential_testing.py",
        "category": "Files & Folders",
        "version": "0.2.0",
        "inputs": {"n": {"type": "int"}},
        "outputs": {"int_list": {"type": "list"}},
    },
    {
        "name": "create_3d_vector",
        "display_name": "Create Vector",
        "description": "Create a 3D vector.",
        "type": "function",
        "icon": "vector-square",
        "requirements": ["numpy"],
        "file_path": "sequential_testing.py",
        "category": "Files & Folders",
        "version": "0.2.0",
        "inputs": {
            "list1": {"type": "list"},
            "list2": {"type": "list"},
            "list3": {"type": "list"},
        },
        "outputs": {"vector": {"type": "vector"}},
    },
    {
        "name": "scalar_product",
        "display_name": "Scalar Product",
        "description": "Scalar product of two vectors.",
        "type": "function",
        "icon": "vector-square",
        "requirements": ["numpy"],
        "file_path": "sequential_testing.py",
        "category": "Files & Folders",
        "version": "0.2.0",
        "inputs": {"vector1": {"type": "vector"}, "vector2": {"type": "vector"}},
        "outputs": {"product": {"type": "int"}},
    },
    {
        "name": "append_to_list",
        "display_name": "Append Value to List",
        "description": "Append a value to list.",
        "type": "function",
        "icon": "bars-staggered",
        "file_path": "sequential_testing.py",
        "category": "Files & Folders",
        "version": "0.2.0",
        "inputs": {"lst": {"type": "list"}, "value": {"type": "int"}},
        "outputs": {"lst": {"type": "list"}},
    },
    {
        "name": "greater_or_equal_than",
        "display_name": "a ≥ b",
        "description": "Append a value to list.",
        "type": "function",
        "icon": "cube",
        "file_path": "sequential_testing.py",
        "category": "logical comparators",
        "version": "0.2.0",
        "inputs": {"a": {"type": "number"}, "b": {"type": "number"}},
        "outputs": {"result": {"type": "bool"}},
    },
    {
        "name": "connect_to_external_service",
        "display_name": "Socket Service",
        "description": "a test for docker configuration, just a socket client that tries to connect to something.",
        "type": "function",
        "icon": "tower-broadcast",
        "file_path": "docker_testing.py",
        "category": "Docker Testing",
        "version": "0.2.0",
        "inputs": {"host": {"type": "str"}},
        "outputs": {"response": {"type": "str"}},
        "docker": {
            "ports": [{"target": 12345, "published": 12345, "protocol": "tcp"}],
            "volumes": [
                {"name": "db-volume", "container-path": "/another_folder/data"}
            ],
            "secrets": [{"name": "postgres_password", "env": "POSTGRES_PASSWORD_FILE"}],
        },
    },
    {
        "name": "get_database_session",
        "display_name": "PostgreSQL",
        "description": "Connection to 'PostgreSQL'.",
        "type": "function",
        "icon": "database",
        "requirements": ["sqlalchemy", "psycopg2"],
        "file_path": "docker_testing.py",
        "category": "Docker Testing",
        "version": "0.2.0",
        "outputs": {"session": {"type": "any"}},
        "options": [
            {"name": "db_name", "display_name": "DB Name", "type": "input"},
            {"name": "db_user", "display_name": "DB User", "type": "input"},
            {"name": "db_password", "display_name": "DB Password", "type": "input"},
            {"name": "db_host", "display_name": "DB Host", "type": "input"},
        ],
        "docker": {
            "service": "db-postgres",
            "image": "postgres",
            "image-version": 16,
            "ports": [{"target": 5432, "published": 5432, "protocol": "tcp"}],
            "volumes": [{"name": "db-volume", "container-path": "/data"}],
            "networks": ["backend"],
            "secrets": [{"name": "postgres_password", "env": "POSTGRES_PASSWORD_FILE"}],
        },
    },
    {
        "name": "text_placeholder",
        "display_name": "Text",
        "type": "ui",
        "icon": "font",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {"text": {"type": "str"}},
    },
    {
        "name": "image",
        "display_name": "Image",
        "type": "ui",
        "icon": "image",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {
            "image": {"type": "streamlit_image"},
            "caption": {"type": "str"},
        },
        "optional_inputs": {"caption": "caption"},
        "options": [
            {
                "name": "channels",
                "display_name": "Channels",
                "type": "select",
                "choices": ["RGB", "BGR"],
                "default": "RGB",
            },
            {
                "name": "output_format",
                "display_name": "Output Format",
                "type": "select",
                "choices": ["auto", "JPEG", "PNG"],
                "default": "auto",
            },
        ],
    },
    {
        "name": "video",
        "display_name": "Video",
        "type": "ui",
        "icon": "video",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {"video": {"type": "streamlit_video"}},
        "options": [
            {
                "name": "format",
                "display_name": "Format",
                "type": "select",
                "choices": ["video/mp4", "video/webm", "video/ogg"],
                "default": "video/mp4",
            }
        ],
    },
    {
        "name": "map",
        "display_name": "Map",
        "type": "ui",
        "icon": "map",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {"data": {"type": "streamlit_data"}},
        "options": [
            {
                "name": "size",
                "display_name": "Size attribute",
                "type": "input",
                "max_characters": 50,
            },
            {
                "name": "color",
                "display_name": "Color attribute",
                "type": "input",
                "max_characters": 50,
            },
        ],
    },
    {
        "name": "number_input",
        "display_name": "Number",
        "type": "ui",
        "icon": "hashtag",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {"number": {"type": "number"}, "is_disabled": {"type": "bool"}},
        "optional_inputs": {"number": "value", "is_disabled": "isDisabled"},
        "outputs": {"number": {"type": "number"}},
    },
    {
        "name": "text_input",
        "display_name": "Text input",
        "type": "ui",
        "icon": "font",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {"text": {"type": "str"}, "is_disabled": {"type": "bool"}},
        "optional_inputs": {"text": "value", "is_disabled": "isDisabled"},
        "outputs": {"text": {"type": "str"}},
    },
    {
        "name": "textarea_input",
        "display_name": "Textarea",
        "type": "ui",
        "icon": "font",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {"text": {"type": "str"}, "is_disabled": {"type": "bool"}},
        "optional_inputs": {"text": "value", "is_disabled": "isDisabled"},
        "outputs": {"text": {"type": "str"}},
    },
    {
        "name": "select",
        "display_name": "Select",
        "type": "ui",
        "icon": "hand-pointer",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {
            "options": {"type": "iterable"},
            "index": {"type": "int"},
            "is_disabled": {"type": "bool"},
        },
        "optional_inputs": {
            "options": "options",
            "is_disabled": "isDisabled",
            "index": "index",
        },
        "outputs": {"option": {"type": "any"}},
    },
    {
        "name": "multiselect",
        "display_name": "Multiselect",
        "type": "ui",
        "icon": "hand-pointer",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {
            "options": {"type": "iterable"},
            "default": {"type": "iterable"},
            "is_disabled": {"type": "bool"},
        },
        "optional_inputs": {
            "options": "options",
            "is_disabled": "isDisabled",
            "default": "selected",
        },
        "outputs": {"option": {"type": "list"}},
    },
    {
        "name": "button",
        "display_name": "Button",
        "type": "ui",
        "icon": "square",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {"is_disabled": {"type": "bool"}},
        "optional_inputs": {"is_disabled": "isDisabled"},
        "outputs": {"clicked": {"type": "bool"}},
    },
    {
        "name": "radio",
        "display_name": "Radio",
        "type": "ui",
        "icon": "circle-dot",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {
            "options": {"type": "iterable"},
            "index": {"type": "int"},
            "is_disabled": {"type": "bool"},
        },
        "optional_inputs": {
            "options": "options",
            "is_disabled": "isDisabled",
            "index": "index",
        },
        "outputs": {"option": {"type": "any"}},
    },
    {
        "name": "checkbox",
        "display_name": "Checkbox",
        "type": "ui",
        "icon": "square-check",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {"checked": {"type": "bool"}, "is_disabled": {"type": "bool"}},
        "optional_inputs": {"is_disabled": "isDisabled", "checked": "value"},
        "outputs": {"checked": {"type": "bool"}},
    },
    {
        "name": "toggle",
        "display_name": "Toggle",
        "type": "ui",
        "icon": "toggle-on",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {"toggled": {"type": "bool"}, "is_disabled": {"type": "bool"}},
        "optional_inputs": {"is_disabled": "isDisabled", "toggled": "value"},
        "outputs": {"toggled": {"type": "bool"}},
    },
    {
        "name": "line_chart",
        "display_name": "Line Chart",
        "type": "ui",
        "icon": "chart-line",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {"data": {"type": "streamlit_data"}},
        "options": [
            {
                "name": "x",
                "display_name": "X axis attribute",
                "type": "input",
                "max_characters": 50,
            },
            {
                "name": "y",
                "display_name": "Y axis attribute",
                "type": "input",
                "max_characters": 50,
            },
            {
                "name": "color",
                "display_name": "Color attribute",
                "type": "input",
                "max_characters": 50,
            },
        ],
    },
    {
        "name": "area_chart",
        "display_name": "Area Chart",
        "type": "ui",
        "icon": "chart-area",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {"data": {"type": "streamlit_data"}},
        "options": [
            {
                "name": "x",
                "display_name": "X axis attribute",
                "type": "input",
                "max_characters": 50,
            },
            {
                "name": "y",
                "display_name": "Y axis attribute",
                "type": "input",
                "max_characters": 50,
            },
            {
                "name": "color",
                "display_name": "Color attribute",
                "type": "input",
                "max_characters": 50,
            },
        ],
    },
    {
        "name": "bar_chart",
        "display_name": "Bar Chart",
        "type": "ui",
        "icon": "chart-simple",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {"data": {"type": "streamlit_data"}},
        "options": [
            {
                "name": "x",
                "display_name": "X axis attribute",
                "type": "input",
                "max_characters": 50,
            },
            {
                "name": "y",
                "display_name": "Y axis attribute",
                "type": "input",
                "max_characters": 50,
            },
            {
                "name": "color",
                "display_name": "Color attribute",
                "type": "input",
                "max_characters": 50,
            },
        ],
    },
    {
        "name": "scatter_chart",
        "display_name": "Scatter Chart",
        "type": "ui",
        "icon": "chart-gant",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {"data": {"type": "streamlit_data"}},
        "options": [
            {
                "name": "x",
                "display_name": "X axis attribute",
                "type": "input",
                "max_characters": 50,
            },
            {
                "name": "y",
                "display_name": "Y axis attribute",
                "type": "input",
                "max_characters": 50,
            },
            {
                "name": "color",
                "display_name": "Color attribute",
                "type": "input",
                "max_characters": 50,
            },
            {
                "name": "size",
                "display_name": "Size attribute",
                "type": "input",
                "max_characters": 50,
            },
        ],
    },
    {
        "name": "slider",
        "display_name": "Slider",
        "type": "ui",
        "icon": "hashtag",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {"number": {"type": "number"}, "is_disabled": {"type": "bool"}},
        "optional_inputs": {"is_disabled": "isDisabled", "number": "value"},
        "outputs": {"number": {"type": "number"}},
    },
    {
        "name": "link_button",
        "display_name": "Link button",
        "type": "ui",
        "icon": "link",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {"url": {"type": "str"}},
    },
    {
        "name": "upload",
        "display_name": "Upload",
        "type": "ui",
        "icon": "upload",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {"is_disabled": {"type": "bool"}},
        "optional_inputs": {"is_disabled": "isDisabled"},
        "outputs": {"uploaded": {"type": "streamlit_uploadable"}},
    },
    {
        "name": "download",
        "display_name": "Download",
        "type": "ui",
        "icon": "download",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {
            "data": {"type": "streamlit_downloadable"},
            "file_name": {"type": "str"},
            "is_disabled": {"type": "bool"},
        },
        "optional_inputs": {"is_disabled": "isDisabled", "file_name": "fileName"},
        "options": [
            {
                "name": "mime",
                "display_name": "Mime Type",
                "type": "select",
                "choices": [
                    "text/plain",
                    "text/html",
                    "text/csv",
                    "application/pdf",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/msword",
                    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "application/vnd.ms-excel",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "application/vnd.ms-powerpoint",
                    "image/png",
                    "image/jpeg",
                    "image/gif",
                    "application/json",
                    "application/xml",
                    "text/xml",
                    "application/zip",
                    "application/javascript",
                    "text/css",
                    "application/octet-stream",
                ],
                "default": "text/plain",
            }
        ],
    },
    {
        "name": "time",
        "display_name": "Time input",
        "type": "ui",
        "icon": "clock",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {"time": {"type": "time"}, "is_disabled": {"type": "bool"}},
        "optional_inputs": {"is_disabled": "isDisabled", "time": "selectedTime"},
        "outputs": {"time": {"type": "time"}},
    },
    {
        "name": "date",
        "display_name": "Date input",
        "type": "ui",
        "icon": "calendar-days",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {"date": {"type": "date"}, "is_disabled": {"type": "bool"}},
        "optional_inputs": {"is_disabled": "isDisabled", "date": "dateValue"},
        "outputs": {"date": {"type": "date"}},
    },
    {
        "name": "code_editor",
        "display_name": "Code editor",
        "is_trigger": False,
        "type": "ui",
        "icon": "code",
        "category": "Streamlit",
        "version": "0.2.0",
        "requirements": ["streamlit_code_editor"],
        "inputs": {"code": {"type": "str"}},
        "optional_inputs": {"code": "code"},
        "outputs": {"code": {"type": "str"}},
    },
    {
        "name": "code_display",
        "display_name": "Code display",
        "is_trigger": False,
        "type": "ui",
        "icon": "code",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {"code": {"type": "str"}},
    },
    {
        "name": "camera",
        "display_name": "Camera",
        "type": "ui",
        "icon": "camera",
        "category": "Streamlit",
        "version": "0.2.0",
        "outputs": {"image": {"type": "streamlit_uploadedfile"}},
    },
    {
        "name": "table",
        "display_name": "Table",
        "type": "ui",
        "icon": "table",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {"data": {"type": "streamlit_data"}},
    },
    {
        "name": "json",
        "display_name": "JSON",
        "type": "ui",
        "icon": "file-code",
        "category": "Streamlit",
        "version": "0.2.0",
        "inputs": {"body": {"type": "streamlit_serializable"}},
    },
    {
        "name": "hide_ui",
        "display_name": "Hide UI",
        "type": "uihide",
        "icon": "eye-slash",
        "category": "Streamlit",
        "version": "1.0.0",
    },
    {
        "name": "create_session_variable",
        "display_name": "New session variable",
        "type": "svariable",
        "icon": "code",
        "category": "Streamlit",
        "version": "1.0.0",
        "inputs": {"value": {"type": "any"}},
    },
    {
        "name": "get_session_variable",
        "display_name": "Get session variable",
        "type": "svariable",
        "icon": "code",
        "category": "Streamlit",
        "version": "1.0.0",
        "outputs": {"value": {"type": "any"}},
    },
    {
        "name": "set_session_variable",
        "display_name": "Set session variable",
        "type": "svariable",
        "icon": "code",
        "category": "Streamlit",
        "version": "1.0.0",
        "inputs": {"value": {"type": "any"}},
    },
],
